@page "/shorturl"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using System.Security.Cryptography
@using ShortURL
@inject ILogger<URL> Logger
@inject IJSRuntime JSRuntime

<PageTitle>URL Shortener</PageTitle>

<h2>Paste the URL below to be shortened:</h2>

<EditForm Model="Model" OnValidSubmit="HandleValidSubmit" FormName="shorturl">
  <DataAnnotationsValidator />
  <ValidationSummary />
  <div class="mb-3">
    <label class="form-label" for="originalURL">URL:</label>
    <InputText class="form-control" id="originalURL" placeholder="Ex: www.google.com" @bind-Value="Model.originalURL" />
  </div>
  <div class="col-auto">
    <span>
    <button type="submit" class="btn btn-primary mb-3">Submit</button>
    <button type="button" class="btn btn-danger mb-3" @onclick="ClearForm">Clear</button>
    </span>
  </div>
  @if (!string.IsNullOrWhiteSpace(Model.shortenedUrl))
  {
    <div class="col-auto">
    <p>Shortened URL: @Model.shortenedUrl</p>
  </div>
  }
</EditForm>

@code {
  private EditContext _editContext;
  public URL Model { get; set; } = new URL();

  protected override void OnInitialized()
  {
    _editContext = new EditContext(Model);
  }
  private async Task ClearForm()
  {
    Model = new URL();
    @* Console.WriteLine("\n\nCleared:\n\n"); *@
    _editContext  = new EditContext(Model);    
    @* await JSRuntime.InvokeVoidAsync("console.log", "Form cleared.");  *@
  }
  private async Task HandleValidSubmit()
  {
    Logger.LogInformation("URL = {url}", Model.originalURL);
    Model.shortenedUrl = GenerateShortURL(Model.originalURL);
    @* await JSRuntime.InvokeVoidAsync("console.log", $"Shortened URL: {Model.shortenedUrl}");
    Console.WriteLine("\n\nHERE:\n{0}\n\n", Model.shortenedUrl); *@
  }
    private string GenerateShortURL(string url)
  {
    using (var sha256 = SHA256.Create())
    {
      var hashBytes = sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(url));
      var hash = BitConverter.ToString(hashBytes).Replace("-", "").Substring(0, 8); // Shorten the hash for URL purposes
      var baseUrl = "https://shrt.url/";
      return $"{baseUrl}{hash}";
    }
  }  
}